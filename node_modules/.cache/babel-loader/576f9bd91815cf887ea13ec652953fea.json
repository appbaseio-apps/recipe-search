{"ast":null,"code":"var _jsxFileName = \"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/InfiniteScrollContainer.js\";\nimport React from \"react\";\nimport { SearchContext } from \"@appbaseio/react-searchbox\";\nimport { Spin } from \"antd\";\nimport \"./../assets/styles/infiniteScrollContainer.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet prevY = 0;\n\nclass InfiniteScrollContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleObserver = (entities, observer) => {\n      const y = entities[0].boundingClientRect.y;\n\n      if (prevY > y) {\n        this.props.callNextPage();\n      }\n\n      prevY = y;\n    };\n\n    this.loadingRef = /*#__PURE__*/React.createRef();\n  } // eslint-disable-next-line\n\n\n  componentDidMount() {\n    var options = {\n      root: document.getElementById(\"under-observation\"),\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    this.observer = new IntersectionObserver(this.handleObserver, options);\n    this.observer.observe(this.loadingRef.current);\n  }\n\n  componentDidUpdate() {\n    if (this.context._components[\"result-component\"].from == 0) {\n      document.getElementById(\"under-observation\").scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      loading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"under-observation\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.loadingRef,\n        className: \"loading-spinner\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          delay: 500,\n          spinning: loading,\n          size: \"large\",\n          tip: \"Fetching Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInfiniteScrollContainer.contextType = SearchContext;\nexport default InfiniteScrollContainer;","map":{"version":3,"sources":["/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/InfiniteScrollContainer.js"],"names":["React","SearchContext","Spin","prevY","InfiniteScrollContainer","Component","constructor","props","handleObserver","entities","observer","y","boundingClientRect","callNextPage","loadingRef","createRef","componentDidMount","options","root","document","getElementById","rootMargin","threshold","IntersectionObserver","observe","current","componentDidUpdate","context","_components","from","scrollTo","render","children","loading","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAO,gDAAP;;;AAEA,IAAIC,KAAK,GAAG,CAAZ;;AACA,MAAMC,uBAAN,SAAsCJ,KAAK,CAACK,SAA5C,CAAsD;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,cALmB,GAKF,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACvC,YAAMC,CAAC,GAAGF,QAAQ,CAAC,CAAD,CAAR,CAAYG,kBAAZ,CAA+BD,CAAzC;;AAEA,UAAIR,KAAK,GAAGQ,CAAZ,EAAe;AACb,aAAKJ,KAAL,CAAWM,YAAX;AACD;;AACDV,MAAAA,KAAK,GAAGQ,CAAR;AACD,KAZkB;;AAEjB,SAAKG,UAAL,gBAAkBd,KAAK,CAACe,SAAN,EAAlB;AACD,GALmD,CAMpD;;;AASAC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAEC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CADM;AAEZC,MAAAA,UAAU,EAAE,KAFA;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAd;AAMA,SAAKZ,QAAL,GAAgB,IAAIa,oBAAJ,CAAyB,KAAKf,cAA9B,EAA8CS,OAA9C,CAAhB;AACA,SAAKP,QAAL,CAAcc,OAAd,CAAsB,KAAKV,UAAL,CAAgBW,OAAtC;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKC,OAAL,CAAaC,WAAb,CAAyB,kBAAzB,EAA6CC,IAA7C,IAAqD,CAAzD,EAA4D;AAC1DV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CU,QAA7C,CAAsD,CAAtD,EAAyD,CAAzD;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAwB,KAAK1B,KAAnC;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA,8BACE;AAAA,kBAAGyB;AAAH,uBADF,eAEE;AAAK,QAAA,GAAG,EAAE,KAAKlB,UAAf;AAA2B,QAAA,SAAS,EAAC,iBAArC;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,KAAK,EAAE,GADT;AAEE,UAAA,QAAQ,EAAEmB,OAFZ;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA/CmD;;AAAhD7B,uB,CACG8B,W,GAAcjC,a;AAiDvB,eAAeG,uBAAf","sourcesContent":["import React from \"react\";\nimport { SearchContext } from \"@appbaseio/react-searchbox\";\nimport { Spin } from \"antd\";\nimport \"./../assets/styles/infiniteScrollContainer.css\";\n\nlet prevY = 0;\nclass InfiniteScrollContainer extends React.Component {\n  static contextType = SearchContext;\n  constructor(props) {\n    super(props);\n    this.loadingRef = React.createRef();\n  }\n  // eslint-disable-next-line\n  handleObserver = (entities, observer) => {\n    const y = entities[0].boundingClientRect.y;\n\n    if (prevY > y) {\n      this.props.callNextPage();\n    }\n    prevY = y;\n  };\n  componentDidMount() {\n    var options = {\n      root: document.getElementById(\"under-observation\"),\n      rootMargin: \"0px\",\n      threshold: 1.0,\n    };\n\n    this.observer = new IntersectionObserver(this.handleObserver, options);\n    this.observer.observe(this.loadingRef.current);\n  }\n\n  componentDidUpdate() {\n    if (this.context._components[\"result-component\"].from == 0) {\n      document.getElementById(\"under-observation\").scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { children, loading } = this.props;\n    return (\n      <div id=\"under-observation\">\n        <>{children}</>\n        <div ref={this.loadingRef} className=\"loading-spinner\">\n          <Spin\n            delay={500}\n            spinning={loading}\n            size=\"large\"\n            tip=\"Fetching Results\"\n          ></Spin>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InfiniteScrollContainer;\n"]},"metadata":{},"sourceType":"module"}