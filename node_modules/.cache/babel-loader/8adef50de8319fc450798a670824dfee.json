{"ast":null,"code":"//getting hostname from the given url of any form\nexport const getHostname = url => {\n  let urlLocal = url,\n      tempProtocol = \"\"; // use URL constructor and return hostname\n\n  if (urlLocal.indexOf(\"://\") == -1) {\n    tempProtocol = \"https://\";\n    urlLocal = tempProtocol + urlLocal;\n  }\n\n  return new URL(urlLocal).hostname.split(\".\")[1];\n};","map":{"version":3,"sources":["/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/helper/functions.js"],"names":["getHostname","url","urlLocal","tempProtocol","indexOf","URL","hostname","split"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAIC,GAAD,IAAS;AAClC,MAAIC,QAAQ,GAAGD,GAAf;AAAA,MACEE,YAAY,GAAG,EADjB,CADkC,CAGlC;;AACA,MAAID,QAAQ,CAACE,OAAT,CAAiB,KAAjB,KAA2B,CAAC,CAAhC,EAAmC;AACjCD,IAAAA,YAAY,GAAG,UAAf;AACAD,IAAAA,QAAQ,GAAGC,YAAY,GAAGD,QAA1B;AACD;;AACD,SAAO,IAAIG,GAAJ,CAAQH,QAAR,EAAkBI,QAAlB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAP;AACD,CATM","sourcesContent":["//getting hostname from the given url of any form\nexport const getHostname = (url) => {\n  let urlLocal = url,\n    tempProtocol = \"\";\n  // use URL constructor and return hostname\n  if (urlLocal.indexOf(\"://\") == -1) {\n    tempProtocol = \"https://\";\n    urlLocal = tempProtocol + urlLocal;\n  }\n  return new URL(urlLocal).hostname.split(\".\")[1];\n};\n"]},"metadata":{},"sourceType":"module"}