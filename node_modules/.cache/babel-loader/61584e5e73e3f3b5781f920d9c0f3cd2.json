{"ast":null,"code":"var _jsxFileName = \"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/ResultsRenderer.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Empty, Row, Spin } from \"antd\";\nimport CardItem from \"./CardItem\";\nimport InfiniteScrollContainer from \"./InfiniteScrollContainer\";\nimport PromotedCardItem from \"./PromotedCardItem\";\nimport React, { useState } from \"react\";\nimport RecipeFullView from \"./RecipeFullView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet currentPage = 0; //current page number; used for scroll pagination\n\nconst ResultsRenderer = ({\n  results = [],\n  loading = false,\n  size = 0,\n  setFrom = () => console.log(\"Pass a function to implement pagination\")\n}) => {\n  _s();\n\n  const [fullRecipe, setfullRecipe] = useState({\n    isModalVisible: false,\n    //boolean for full-recipe modal visibility\n    recipeItem: {} // object holding current recipe opened in modal for full-recipe\n\n  });\n\n  const renderPromotedResults = results => {\n    //getting promoted results separately from normal results\n    const promotedData = (results === null || results === void 0 ? void 0 : results.promoted) ? [...results.promotedData.map(element => {\n      return element.doc;\n    })] : [];\n    return promotedData === null || promotedData === void 0 ? void 0 : promotedData.map(promotedItem => /*#__PURE__*/_jsxDEV(PromotedCardItem, {\n      item: promotedItem\n    }, promotedItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  };\n\n  const renderResults = results => {\n    var _results$data;\n\n    return (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data.slice(1).map(item => {\n      return /*#__PURE__*/_jsxDEV(CardItem, {\n        item: item,\n        setfullRecipe: setfullRecipe\n      }, item.id * Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", !results.data.length ? /*#__PURE__*/_jsxDEV(Empty, {\n      description: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: loading ? \"Fetching Data!\" : \"No Results Found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      className: \"result-time-status\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: new Intl.NumberFormat(\"en-US\", {\n            maximumSignificantDigits: 3\n          }).format(results.numberOfResults)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), \" \", \"results found in\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: typeof results.time == \"object\" ? results.time.took : results.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), \" \", \"ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScrollContainer, {\n      callNextPage: () => {\n        if (Math.floor(results.numberOfResults / size) >= currentPage) {\n          currentPage++;\n          setFrom(currentPage * size);\n        }\n      },\n      loading: loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(Spin, {\n          spinning: loading,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            wrap: true,\n            justify: \"flex-start\",\n            className: \"result-row\",\n            children: [renderPromotedResults(results), renderResults(results)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeFullView, {\n      isModalVisible: fullRecipe.isModalVisible,\n      recipeItem: fullRecipe.recipeItem,\n      onClose: () => setfullRecipe({\n        isModalVisible: false,\n        recipeItem: {}\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ResultsRenderer, \"yoTPxVFbYVU3wK58gB6+JaOowNQ=\");\n\n_c = ResultsRenderer;\nexport default ResultsRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsRenderer\");","map":{"version":3,"sources":["/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/ResultsRenderer.js"],"names":["Col","Empty","Row","Spin","CardItem","InfiniteScrollContainer","PromotedCardItem","React","useState","RecipeFullView","currentPage","ResultsRenderer","results","loading","size","setFrom","console","log","fullRecipe","setfullRecipe","isModalVisible","recipeItem","renderPromotedResults","promotedData","promoted","map","element","doc","promotedItem","id","renderResults","data","slice","item","Math","random","length","Intl","NumberFormat","maximumSignificantDigits","format","numberOfResults","time","took","floor"],"mappings":"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","sourcesContent":["import { Col, Empty, Row, Spin } from \"antd\";\n\nimport CardItem from \"./CardItem\";\nimport InfiniteScrollContainer from \"./InfiniteScrollContainer\";\nimport PromotedCardItem from \"./PromotedCardItem\";\nimport React, { useState } from \"react\";\nimport RecipeFullView from \"./RecipeFullView\";\n\nlet currentPage = 0; //current page number; used for scroll pagination\nconst ResultsRenderer = ({\n  results = [],\n  loading = false,\n  size = 0,\n  setFrom = () => console.log(\"Pass a function to implement pagination\"),\n}) => {\n  const [fullRecipe, setfullRecipe] = useState({\n    isModalVisible: false, //boolean for full-recipe modal visibility\n    recipeItem: {}, // object holding current recipe opened in modal for full-recipe\n  });\n  const renderPromotedResults = (results) => {\n    //getting promoted results separately from normal results\n    const promotedData = results?.promoted\n      ? [\n          ...results.promotedData.map((element) => {\n            return element.doc;\n          }),\n        ]\n      : [];\n    return promotedData?.map((promotedItem) => (\n      <PromotedCardItem key={promotedItem.id} item={promotedItem} />\n    ));\n  };\n\n  const renderResults = (results) => {\n    return results.data?.slice(1).map((item) => {\n      return (\n        <CardItem\n          key={item.id * Math.random()}\n          item={item}\n          setfullRecipe={setfullRecipe}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      {\" \"}\n      {!results.data.length ? (\n        <Empty\n          description={\n            <span>{loading ? \"Fetching Data!\" : \"No Results Found!\"}</span>\n          }\n        ></Empty>\n      ) : (\n        <Col span={24} className=\"result-time-status\">\n          {\" \"}\n          <p>\n            <strong>\n              {new Intl.NumberFormat(\"en-US\", {\n                maximumSignificantDigits: 3,\n              }).format(results.numberOfResults)}\n            </strong>{\" \"}\n            results found in{\" \"}\n            <strong>\n              {typeof results.time == \"object\"\n                ? results.time.took\n                : results.time}\n            </strong>{\" \"}\n            ms\n          </p>\n        </Col>\n      )}\n      <InfiniteScrollContainer\n        callNextPage={() => {\n          if (Math.floor(results.numberOfResults / size) >= currentPage) {\n            currentPage++;\n            setFrom(currentPage * size);\n          }\n        }}\n        loading={loading}\n      >\n        <div className=\"result-list-container\">\n          <Spin spinning={loading}>\n            <Row\n              gutter={[16, 16]}\n              wrap\n              justify=\"flex-start\"\n              className=\"result-row\"\n            >\n              {renderPromotedResults(results)}\n              {renderResults(results)}\n            </Row>\n          </Spin>{\" \"}\n        </div>\n      </InfiniteScrollContainer>\n      {/* Recipe full view modal */}\n      <RecipeFullView\n        isModalVisible={fullRecipe.isModalVisible}\n        recipeItem={fullRecipe.recipeItem}\n        onClose={() => setfullRecipe({ isModalVisible: false, recipeItem: {} })}\n      />\n    </>\n  );\n};\n\nexport default ResultsRenderer;\n"]},"metadata":{},"sourceType":"module"}