{"remainingRequest":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/App.vue","mtime":1627887036330},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/cache-loader/dist/cjs.js","mtime":1619552968369},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1621975511869},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/cache-loader/dist/cjs.js","mtime":1619552968369},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js","mtime":1621975511869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}