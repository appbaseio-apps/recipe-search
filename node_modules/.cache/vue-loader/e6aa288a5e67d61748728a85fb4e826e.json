{"remainingRequest":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/FiltersRenderer.vue?vue&type=style&index=0&id=47f748de&scoped=true&lang=css&","dependencies":[{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/FiltersRenderer.vue","mtime":1627887036333},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/css-loader/dist/cjs.js","mtime":1619520209942},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1621975511869},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/postcss-loader/src/index.js","mtime":1614876803027},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/cache-loader/dist/cjs.js","mtime":1619552968369},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js","mtime":1621975511869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5maWx0ZXItY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAxMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGdyaWQtZ2FwOiAxMHB4Owp9Ci5maWx0ZXItY29udGFpbmVyID4gLmFudC1yb3cgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjAwcHg7Cn0KCi5maWx0ZXItY29udGFpbmVyICouYW50LXRhZy1jaGVja2FibGUgewogIGN1cnNvcjogcG9pbnRlcjsKICB3aWR0aDogbWF4LWNvbnRlbnQ7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogNnB4OwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwogIGZvbnQtc2l6ZTogMTNweDsKICBmb250LXdlaWdodDogNjAwOwogIGJvcmRlci1jb2xvcjogcmdiKDkwLCAxODMsIDE0OCk7Cn0KCi5maWx0ZXItY29udGFpbmVyIC5hbnQtY29sOmxhc3QtY2hpbGQgPiAuYW50LWJ0biB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0K"},{"version":3,"sources":["FiltersRenderer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FiltersRenderer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    :class=\"{\n      'filter-container': true,\n    }\"\n  >\n    <!-- Spinner placeholder for loading : true -->\n    <a-row v-if=\"loading\" justify=\"center\" type=\"flex\" :gutter=\"[24, 24]\"\n      ><a-col span=\"24\">\n        <a-spin :spinning=\"loading\" size=\"large\"></a-spin> </a-col\n    ></a-row>\n\n    <!-- template for result renderer -->\n    <template v-if=\"!loading\">\n      <template\n        v-for=\"(item, index) in getIngredientFilterArr(aggregationData, value)\"\n      >\n        <a-checkable-tag\n          :key=\"index\"\n          :checked=\"value ? value.includes(item._key) : false\"\n          @change=\"\n            (checked) => handleFilterToggle(checked, value, setValue, item._key)\n          \"\n        >\n          <a-icon v-if=\"!item.isChecked\" type=\"plus-circle\" />\n          <a-icon v-if=\"item.isChecked\" type=\"minus-circle\" />\n          {{ item._key }} ({{\n            new Intl.NumberFormat(\"en-US\", {\n              maximumSignificantDigits: 3,\n            }).format(item._doc_count)\n          }})</a-checkable-tag\n        ></template\n      >\n      <a-col span=\"24\">\n        <a-button\n          v-if=\"!isMobileView\"\n          type=\"primary\"\n          @click=\"showAllFilters = !showAllFilters\"\n          >Show {{ showAllFilters ? \"Less\" : \"More\" }}\n        </a-button>\n      </a-col>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FiltersRenderer\",\n  props: {\n    isMobileView: {\n      type: Boolean,\n      default() {\n        return false;\n      },\n    },\n    loading: Boolean,\n    aggregationData: {\n      type: Object || Array,\n      default() {\n        return [];\n      },\n    },\n    value: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    setValue: {\n      type: Function,\n      default() {\n        return () => {\n          window.console.log(\"Please provide a function\");\n        };\n      },\n    },\n    /* eslint-enable no-console */\n  },\n  data() {\n    return {\n      showAllFilters: false,\n    };\n  },\n  methods: {\n    getIngredientFilterArr(aggregationData, value) {\n      /* eslint-disable array-callback-return */\n      const responseValue = value\n        ? value.map((item) => item.toLowerCase())\n        : [];\n      const sortedFilters = [];\n      aggregationData?.data?.map((item) => {\n        if (!responseValue.includes(item._key.toLowerCase())) {\n          sortedFilters.push(item);\n        } else {\n          sortedFilters.unshift({ isChecked: true, ...item });\n        }\n      });\n\n      return sortedFilters.slice(\n        0,\n        Math.max(\n          7,\n          this.showAllFilters || this.isMobileView ? sortedFilters.length : 7\n        )\n      );\n      /* eslint-enable array-callback-return */\n    },\n    handleFilterToggle(checked, value, setValue, itemKey) {\n      let values = value || [];\n      if (!checked) {\n        values = [...values.filter((valueItem) => valueItem !== itemKey)];\n      } else {\n        values.push(itemKey);\n      }\n      // Set filter value and trigger custom query\n      setValue(values, {\n        triggerDefaultQuery: false,\n        triggerCustomQuery: true,\n        stateChanges: true,\n      });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.filter-container {\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  grid-gap: 10px;\n}\n.filter-container > .ant-row {\n  width: 100%;\n  height: 200px;\n}\n\n.filter-container *.ant-tag-checkable {\n  cursor: pointer;\n  width: max-content;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  text-transform: capitalize;\n  font-size: 13px;\n  font-weight: 600;\n  border-color: rgb(90, 183, 148);\n}\n\n.filter-container .ant-col:last-child > .ant-btn {\n  font-weight: bold;\n}\n</style>\n"]}]}