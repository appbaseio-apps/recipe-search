{"remainingRequest":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/PaginationTrigger.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/src/components/PaginationTrigger.vue","mtime":1627887036333},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/css-loader/dist/cjs.js","mtime":1619520209942},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1621975511869},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/postcss-loader/src/index.js","mtime":1614876803027},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/cache-loader/dist/cjs.js","mtime":1619552968369},{"path":"/Users/mohdashraf/Desktop/appbase-apps/recipes-search/node_modules/vue-loader/lib/index.js","mtime":1621975511869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2FkLW1vcmUtc3R5bGUgewogIHdpZHRoOiAxMDAlOwp9CgoubG9hZC1tb3JlLXN0eWxlID4gZGl2IHsKICBoZWlnaHQ6IDEwMHB4OwogIG1hcmdpbjogMzBweDsKICBwYWRkaW5nOiA1MHB4Owp9Cg=="},{"version":3,"sources":["PaginationTrigger.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PaginationTrigger.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-row class=\"load-more-style\" type=\"flex\" justify=\"center\">\n    <div ref=\"intersection-ref\">\n      <a-spin\n        :spinning=\"isSpinning\"\n        size=\"large\"\n        tip=\"Fetching Results\"\n      ></a-spin></div\n  ></a-row>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tisSpinning: { type: Boolean, default: false },\n\t\toptions: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {\n\t\t\t\t\troot: document.getElementById('under-observation'),\n\t\t\t\t\tthreshold: '1',\n\t\t\t\t};\n\t\t\t},\n\t\t} ,\n\t\tcallNextPage: {\n\t\t\ttype: Function,\n\t\t\tdefault() {\n\t\t\t\treturn () => {\n\t\t\t\t\twindow.console.log('Please provide a function');\n\t\t\t\t};\n\t\t\t},\n\t\t} /* eslint-enable no-console */,\n\t\tscrollToTop: { type: Boolean, default: false },\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tobserver: null,\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.observer = new IntersectionObserver((entries) => {\n\t\t\tthis.handleIntersect(entries[0]);\n\t\t}, this.options);\n\n\t\tthis.observer.observe(this.$refs['intersection-ref']);\n\t},\n\tdestroyed() {\n\t\tthis.observer.disconnect();\n\t},\n\n\tupdated() {\n\t\tthis.scrollToTop\n      && document.getElementById('under-observation').scrollTo(0, 0);\n\t},\n\tmethods: {\n\t\thandleIntersect(entry) {\n\t\t\tif (entry.isIntersecting) {\n\t\t\t\tif (this.isSpinning) return;\n\t\t\t\tthis.callNextPage();\n\t\t\t\tthis.$emit('triggerIntersected');\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n\n<style>\n.load-more-style {\n  width: 100%;\n}\n\n.load-more-style > div {\n  height: 100px;\n  margin: 30px;\n  padding: 50px;\n}\n</style>\n"]}]}